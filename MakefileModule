
# Tipical flags used by the compiler
STRICT = -Wall -Wextra -pedantic -pedantic-errors -Werror -std=c++98
DEBUG = -ggdb -DDEBUG -fno-inline -rdynamic
OPTIMIZATION = -O0

# More flags
COMPILER_FLAGS = $(STRICT) $(DEBUG) $(OPTIMIZATION)
ARCHIVER_FLAGS = -ruc
LINKER_FLAGS =

# This are the paths to external files used by the compiler and the linker.
INCLUDE_PATHS = 
LIBRARY_PATHS = 


# This (this makefile) is a template, so you can override or extend each variable writting
# a 'Makeconfig', a file with the same syntax that a make file
#
# So, the 'GLOBAL' configuration can be modified
-include Makeconfig


# This are the tools used to compile, generate the dependencies, to archive, link and
# delete files. 
#
# The '$@' element represent the target object, '$<' is the first dependency element
# and '$^' are the dependencies without duplicated of that rule.
COMPILE = $(TIMEIT) g++ -c $(COMPILER_FLAGS) $(INCLUDE_PATHS) -o $@ $<
DEPEND = $(TIMEIT) g++ -MM $(COMPILER_FLAGS) $(INCLUDE_PATHS) -MF $@ $(subst .deps,.cpp,$@)
ARCHIVE = $(TIMEIT) ar $(ARCHIVER_FLAGS) $@ $^ 
LINK = $(TIMEIT) g++ $(LINKER_FLAGS) $(LIBRARY_PATHS) -o $@ $@.o $(filter-out $(patsubst %, %.o, $(TARGET)), $^) $(subst lib%.a, -l%, $(LIBRARIES))
RM = $(TIMEIT) rm -f 

#
# END OF THE CONFIGURATION
#

ifeq ($(verbose), 0)
   PRINT_COMPILE = @printf "\033[35m  %-$(ALIGN)s \033[0m" "Compiling $<" ; 
   PRINT_DEPEND = @printf "\033[32;2m  %-$(ALIGN)s \033[0m" "Resolving dependencies for $(subst .deps,.cpp,$@)" ; 
   PRINT_ARCHIVE = @printf "\033[36;1m  %-$(ALIGN)s \033[0m" "Archiving into $@" ; 
   PRINT_LINK = @printf "\033[36;1m  %-$(ALIGN)s \033[0m" "Linking into $@" ; 
   PRINT_RM_DEPS = @printf "\033[31m  %-$(ALIGN)s \033[0m" "Removing depenencies..." ; 
   PRINT_RM_OBJECTS = @printf "\033[31m  %-$(ALIGN)s \033[0m" "Removing objects..." ;
   PRINT_RM_TARGET = @printf "\033[31m  %-$(ALIGN)s \033[0m" "Removing target..." ;
endif

SRC = $(wildcard *.cpp)
OBJ = $(SRC:.cpp=.o)	
DEPS = $(SRC:.cpp=.deps)

.PHONY: all clean depclean mostlyclean

.cpp.o:
	$(PRINT_COMPILE) $(COMPILE) $(NL)

all: $(DEPS) $(TARGET)

ifeq (link, $(findstring link,$(TARGET_CMD)))
$(TARGET): $(OBJ) $(LIBRARIES)
	$(PRINT_LINK) $(LINK) $(NL)
else
$(TARGET): $(OBJ)
	$(PRINT_ARCHIVE) $(ARCHIVE) $(NL)
endif

$(DEPS): 
	$(PRINT_DEPEND) $(DEPEND) $(NL)

depclean:
	$(PRINT_RM_DEPS) $(RM) $(DEPS) $(NL)

mostlyclean: depclean
	$(PRINT_RM_OBJECTS) $(RM) $(OBJ)  $(NL)

clean: mostlyclean 
	$(PRINT_RM_TARGET) $(RM) $(TARGET)  $(NL)

# This will include in this Makefile all the "sub makefiles" with the depenencies loaded
# Only if not is a "clean" rule (eg. "make clean" or "make depclean")
ifneq (clean,$(findstring clean,$(MAKECMDGOALS)))
-include $(DEPS)
endif
